<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2022-05-14T00:11:31+08:00</updated><id>/feed.xml</id><title type="html">Sundar</title><subtitle>Sundar的个人博客</subtitle><author><name>Sundar Zhou</name></author><entry><title type="html">jsdelivr 缓存刷新方法</title><link href="/2022/05/13/jsdelivr-cache/" rel="alternate" type="text/html" title="jsdelivr 缓存刷新方法" /><published>2022-05-13T18:06:57+08:00</published><updated>2022-05-13T18:06:57+08:00</updated><id>/2022/05/13/jsdelivr-cache</id><content type="html" xml:base="/2022/05/13/jsdelivr-cache/">&lt;p&gt;简介：jsDelivr 是一个免费、开源的加速CDN公共服务。&lt;/p&gt;

&lt;h2 id=&quot;jsdelivr-缓存刷新方法&quot;&gt;jsdelivr 缓存刷新方法&lt;/h2&gt;
&lt;p&gt;只需要将链接中的cdn 更改为 purge，访问一下，后面就会刷新，如果没有更新就多刷新几次&lt;/p&gt;

&lt;p&gt;https://cdn.jsdelivr.net/xxxx&lt;/p&gt;

&lt;p&gt;切换为&lt;/p&gt;

&lt;p&gt;https://purge.jsdelivr.net/xxx&lt;/p&gt;

&lt;p&gt;然后再访问原来的链接就好了
https://cdn.jsdelivr.net/xxx&lt;/p&gt;</content><author><name>Sundar Zhou</name></author><category term="jsDelivr" /><category term="CDN" /><summary type="html">简介：jsDelivr 是一个免费、开源的加速CDN公共服务。</summary></entry><entry><title type="html">傻瓜式-配置阿里云服务器（centos7.7 64位）部署Rails项目</title><link href="/2022/05/12/my-first-post/" rel="alternate" type="text/html" title="傻瓜式-配置阿里云服务器（centos7.7 64位）部署Rails项目" /><published>2022-05-12T20:16:54+08:00</published><updated>2022-05-12T20:16:54+08:00</updated><id>/2022/05/12/my-first-post</id><content type="html" xml:base="/2022/05/12/my-first-post/">&lt;h2 id=&quot;ssh免密登录设置&quot;&gt;SSH免密登录设置&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;进入服务器
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  ssh root@xx.xx.xx.xx -p 22
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;增加用户
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  adduser deploy  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;为新增的deploy 设置密码
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  passwd deploy 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;命令输入 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;visudo&lt;/code&gt;, 在root ALL=(ALL) ALL 添加
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  second ALL=(ALL)    ALL
  ALL=(ALL) NOPASSWD: ALL  # sudo不用输入密码
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;编辑文件 /etc/ssh/sshd_config，禁用root登录修改 PermitRootLogin 为 no
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  PermitRootLogin no
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;重新加配置文件吧，使上面的命令生效
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  service sshd restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;在本机增加&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;alias&lt;/code&gt;(这里用的是zsh), 然后重新加载配置文件 source ~/.zshrc
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  deploy=&quot;ssh deploy@xx.xx.xx.xx -p 22&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;8. 本机生成秘钥，放入服务器，然后本地直接输入 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;deploy&lt;/code&gt; 就可以登录上服务器 &lt;/p&gt;
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  ssh-keygen -t rsa #直接一路回车，按默认设置就行
  cat .ssh/id_rsa.pub
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;deploy&lt;/code&gt; 登录服务器,还没有将密钥放入服务器，需要输入密码&lt;/li&gt;
  &lt;li&gt;创建放置密钥目录
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  mkdir ~/.ssh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;创建放置密钥文件
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  touch ~/.ssh/authorized_keys
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;调整权限
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  chmod 700 ~/.ssh
  chmod 600 ~/.ssh/authorized_keys
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;在本地复制密钥并写入服务器的文件中
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; cat ~/.ssh/id_rsa.pub | deploy &quot;cat &amp;gt;&amp;gt; ~/.ssh/authorized_keys&quot;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;安装zsh和oh-my-zsh&quot;&gt;安装zsh和oh-my-zsh&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;zsh安装
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  sudo yum install -y zsh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt; &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;zsh安装
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  chsh -s /bin/zsh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;手动安装oh-my-zsh, 如果连接不上可以试下重启服务&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd ~
git clone git://github.com/robbyrussell/oh-my-zsh.git  # 从github上把oh-my-zsh clone下来到根目录下
~/.oh-my-zsh # 再在根目录下copy一份.zshrc配置
cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;更新系统应用及安装必须的应用&quot;&gt;更新系统应用及安装必须的应用&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo yum -y update 
sudo yum groupinstall -y development # 安装必要的开发工具
sudo su -c 'rpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm';
sudo yum -y update # 再次更新
sudo yum -y install git-core openssl openssl-devel subversion curl curl-devel gcc-c++ patch readline readline-devel zlib zlib-devel libyaml-devel libffi-devel make bzip2 autoconf automake libtool bison sqlite-devel libxml2 libxml2-devel libxslt libxslt-devel libtool # 安装一堆依赖
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;使用rvm安装ruby&quot;&gt;使用rvm安装ruby&lt;/h2&gt;
&lt;h3 id=&quot;安装-gpg-keys&quot;&gt;安装 GPG keys:&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gpg2 --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;如果你遇到问题或想了解更多，请查看安全问题&lt;/p&gt;

&lt;h3 id=&quot;安装-rvm&quot;&gt;安装 RVM:&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -sSL https://get.rvm.io | bash -s stable
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;同时安装ruby-和-rails&quot;&gt;同时安装ruby 和 rails&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -sSL https://get.rvm.io | bash -s stable --rails
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;也可以使rbenv安装Ruby 和 Rails，可以参考 https://ruby-china.org/wiki/rbenv-guide&lt;/p&gt;

&lt;h2 id=&quot;安装nginx&quot;&gt;安装Nginx &lt;/h2&gt;
&lt;pre&gt;&lt;code class=&quot;language-  &quot;&gt;cd /usr/local/src/
sudo wget http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz
sudo tar -zxvf pcre-8.35.tar.gz
cd pcre-8.35
sudo ./configure
sudo make
sudo make install
cd /usr/local/src/
sudo wget http://nginx.org/download/nginx-1.10.0.tar.gz
sudo tar -zxvf nginx-1.10.0.tar.gz
cd nginx-1.10.0
sudo ./configure --prefix=/usr/local/nginx
sudo make
sudo make install
sudo ln -s /usr/local/lib/libpcre.so.1 /lib
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;配置nginx&quot;&gt;配置Nginx&lt;/h2&gt;
&lt;h3 id=&quot;配置的nginxconf文件&quot;&gt;配置的nginx.conf文件&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd /usr/local/nginx/conf  #
sudo vim nginx.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nginx.conf&lt;/code&gt; 如下&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;      user  deploy deploy;
worker_processes  auto;
        #error_log  logs/error.log;
        #error_log  logs/error.log  notice;
        #error_log  logs/error.log  info;

        #pid        logs/nginx.pid;

events {
    worker_connections  1024;
    multi_accept on;
    use epoll;
}


http {
    include       mime.types;
    default_type text/html;
    charset UTF-8;

    #log_format  main  '$remote_addr - $remote_user [$time_local] &quot;$request&quot; '
    #                  '$status $body_bytes_sent &quot;$http_referer&quot; '
    #                  '&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;';

    server_names_hash_bucket_size 128;
    client_header_buffer_size 32k;
    large_client_header_buffers 4 32k;
    client_max_body_size 50m;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;

    keepalive_timeout 20;
    client_header_timeout 20;
    client_body_timeout 20;
    reset_timedout_connection on;

    fastcgi_connect_timeout 300;
    fastcgi_send_timeout 300;
    fastcgi_read_timeout 300;
    fastcgi_buffer_size 64k;
    fastcgi_buffers 4 64k;
    fastcgi_busy_buffers_size 128k;
    fastcgi_temp_file_write_size 256k;

    gzip  on;
    gzip_min_length  256;
    gzip_buffers     4 16k;
    gzip_http_version 1.0;
    gzip_comp_level 4;
    gzip_types       text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_vary on;
    gzip_proxied        any;
    gzip_disable        &quot;MSIE [1-6]\.&quot;;

    include vhost/*.conf;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;新建一个文件夹 来存放 server的配置文件 以便 不同server存放到不同文件中，再导入到&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nginx.conf&lt;/code&gt;中，到这里就差不多算是完成了配置 &lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo mkdir vhost  
sudo vim vhost/web.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;web.conf&lt;/code&gt; 如下&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;upstream web {
    server unix:/tmp/unicorn.web.sock fail_timeout=0;
}

server {
    listen       80;
    server_name  sundar.net.cn 45.78.38.241;
    root  /home/sundar/ruby/web/public;

    location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$ {
        expires      30d;
    }

       location ~ .*\.(js|css)?$ {
        expires      30d;
    }

    location ~* ^(/assets|/favicon.ico) {
        access_log        off;
        expires           max;
    }

    location / {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_set_header   X-Forwarded-Host $host;
        proxy_set_header   X-Forwarded-Server $host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_buffering    on;

        if (!-f $request_filename) {
            proxy_pass http://web;
            break;
        }
    }

    error_page   500 502 503 504  /500.html;
    location = /500.html {
        root /home/sundar/ruby/web/public;
    }

    error_log /home/sundar/ruby/web/log/error.log;
    access_log off;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;             &lt;/p&gt;
&lt;h3 id=&quot;配置文件-测试启动关闭重启命令&quot;&gt;配置文件 测试/启动/关闭/重启命令&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo /usr/local/nginx/sbin/nginx -t  #对配置文件进行测试
sudo /usr/local/nginx/sbin/nginx  #启动
sudo /usr/local/nginx/sbin/nginx -s stop #关闭
sudo /usr/local/nginx/sbin/nginx -s reload #重启
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;安装mysql&quot;&gt;安装mysql&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo rpm -ivh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;确认mysql仓库成功添加&quot;&gt;确认Mysql仓库成功添加&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo yum repolist all | grep mysql | grep enabled
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;如果展示像下面,则表示成功添加仓库:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql-connectors-community/x86_64  MySQL Connectors Community    enabled:     51
mysql-tools-community/x86_64       MySQL Tools Community         enabled:     63
mysql57-community/x86_64           MySQL 5.7 Community Server    enabled:    267
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;开始安装mysql57&quot;&gt;开始安装Mysql5.7&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo yum -y install mysql-community-server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;启动mysql&quot;&gt;启动Mysql&lt;/h3&gt;
&lt;h4 id=&quot;启动&quot;&gt;启动&lt;/h4&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo systemctl start mysqld
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;设置系统启动时自动启动&quot;&gt;设置系统启动时自动启动&lt;/h4&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo systemctl enable mysqld
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;查看启动状态&quot;&gt;查看启动状态&lt;/h4&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo systemctl status mysqld
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;mysql的安全设置&quot;&gt;Mysql的安全设置&lt;/h4&gt;

&lt;p&gt;CentOS上的root默认密码可以在文件/var/log/mysqld.log找到，通过下面命令可以打印出来&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat /var/log/mysqld.log | grep -i 'temporary password'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;执行下面命令进行安全设置，这个命令会进行设置root密码设置，移除匿名用户，禁止root用户远程连接等&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql_secure_installation
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;设置数据库编码为utf8&quot;&gt;设置数据库编码为utf8&lt;/h3&gt;

&lt;p&gt;打开配置文件&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo vim /etc/my.cnf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;在[mysqld]，[client]，[mysql]节点下添加编码设置&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[client]
default-character-set=utf8

[mysql]
default-character-set=utf8

[mysqld]
collation-server = utf8_unicode_ci
init-connect='SET NAMES utf8'
character-set-server = utf8
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;重启mysql即可&quot;&gt;重启Mysql即可&lt;/h4&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo systemctl restart mysqld
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;上传布署项目&quot;&gt;上传布署项目&lt;/h2&gt;
&lt;h3 id=&quot;创建文件夹来存放项目&quot;&gt;创建文件夹来存放项目,&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd ~
mkdir ruby
cd ruby     
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;克隆项目并命名为对应的名字，看你配置文件(/usr/local/nginx/conf/vhost/web.conf)，其实应该先执行这部分再去创建配置文件&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone XXXXXXXX web  
cd /usr/local/nginx/conf/vhost
touch web.conf # 对应你的项目名起的配置文件名,上面配置nginx时已经写好了
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;安装yarn&quot;&gt;安装yarn&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl --silent --location https://dl.yarnpkg.com/rpm/yarn.repo | sudo tee /etc/yum.repos.d/yarn.repo
sudo yum install yarn
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;执行rails的项目&quot;&gt;执行rails的项目&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd web  # 进入项目目录
bundle install --without development test
cp config/database.yml.sample config/database.yml
bundle exec rails db:create RAILS_ENV=production
bundle exec rails db:migrate RAILS_ENV=production
bundle exec rails default:system_user RAILS_ENV=production # 一些rake任务
bundle exec rails assets:precompile RAILS_ENV=production
bundle exec rails kindeditor:assets RAILS_ENV=production
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;记得修改configunicornrb&quot;&gt;记得修改config/unicorn.rb&lt;/h2&gt;

&lt;h2 id=&quot;一些方便更新项目时使用的alias&quot;&gt;一些方便更新项目时使用的alias&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;alias rails_start='bundle exec unicorn_rails -E production -c config/unicorn.rb -D'
alias rails_stop='kill $(cat tmp/pids/unicorn.pid)'
alias rails_restart='kill -9 $(cat tmp/pids/unicorn.pid) &amp;amp;&amp;amp; bundle exec unicorn_rails -c config/unicorn.rb -E production -D’
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ps： 80端口可能不是默认打开，需要上服务器安全组打开&lt;/p&gt;</content><author><name>Sundar Zhou</name></author><category term="ROR" /><category term="服务器" /><summary type="html">SSH免密登录设置</summary></entry></feed>