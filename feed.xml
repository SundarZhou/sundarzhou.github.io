<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2022-08-12T16:37:55+08:00</updated><id>/feed.xml</id><title type="html">搬运BUG</title><subtitle>Sundar的个人博客</subtitle><author><name>Sundar Zhou</name></author><entry><title type="html">感悟人生</title><link href="/2022/08/12/life/" rel="alternate" type="text/html" title="感悟人生" /><published>2022-08-12T16:34:48+08:00</published><updated>2022-08-12T16:34:48+08:00</updated><id>/2022/08/12/life</id><content type="html" xml:base="/2022/08/12/life/">&lt;p&gt;生活的本真，琐琐碎碎；生活的滋味，苦苦甜甜；生活的过程，反反复复；生活的节奏，忙忙碌碌；生活的旋律，喜喜忧忧；生活的心情，起起伏伏。活着，其实是一种姿态。没有纷纷扰扰，因为明白要什么，做什么；没有迷迷糊糊，因为清楚我是谁，谁是我；没有冷冷清清，因为懂得阳光的温暖，心灵的彼岸。活着很难，却是一种期盼；活着很苦，却是一种幸福；活着很累，却是一种无怨无悔。活着，是一首无言的歌。最美的，其实就在身边。总去寻求，可真正得到的，往往是最初；总在埋怨，可真正不弃的，往往在身后；总想穿越，可真正牵绊的，往往是自己。有些风景，只是风景，只能静静欣赏；有些情怀，只是情怀，只能黯然一笑；有些过往，也只是过往，只能让它随风远去。&lt;/p&gt;

&lt;p&gt;每个人都有睡不着的时候，不是不想睡，是有太多的纠缠，太多的放不下。不是不累，而是有太多的苦衷，太多的负累。心不静，则意乱，意乱则神迷。清水无忧，皆因随性，落叶无憾，皆因心空。放下所有，夜来赏月，秋来临风。人生，就是半梦半醒！做自己的决定，然后承担后果；不要随意发脾气，谁都不欠你的；你没那么多观众，别那么累；过去的事情可以不忘记，但一定要放下；别人说的记在脑袋里，而自己的，则放在心里，你永远没有你自己想象中那么重要。做人千万不要太敏感，想太多伤到的反而是自己，说者无心听者有意，随随便便一句话，你都要想东想西琢磨来琢磨去不累吗，很多事情都是听的人记住了，其实，说的人早忘了。&lt;/p&gt;

&lt;p&gt;生活就应当如此。有些事，不想发生，却不得不接受；有些东西，不想了解，却不得不学习；有些人不能失去，却不得不放手。健康是一个人的财富，是一个人生命的象征。假如没有了健康，轻则没有财富，重则失去生命，人人都希望健康， 人人都祈愿平安，而健康和平安，并不是从天上掉下来的，也不是靠神灵赐予的，必须靠自己，用心灵去抒写， 靠人生去营造，健健康康贵为金，平安平安才是福。
生活太忙，生命太短，握清欢在手，掬淡泊于心。忙累了， 就歇一歇，随清风漫舞，看绿植摇曳，心烦了，就静一静，与花草凝眸，与山水对视。走急了，就缓一缓，和自然对话，和自己微笑，生活有序。心自无忧。记住生活，没有绝望，只有想不通，人生没尽头，只有看不透。&lt;/p&gt;

&lt;p&gt;作者：烟花迷58
链接：https://www.toutiao.com/w/1651073904664580/
来源：今日头条
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。&lt;/p&gt;</content><author><name>Sundar Zhou</name></author><category term="Confusion" /><summary type="html">生活的本真，琐琐碎碎；生活的滋味，苦苦甜甜；生活的过程，反反复复；生活的节奏，忙忙碌碌；生活的旋律，喜喜忧忧；生活的心情，起起伏伏。活着，其实是一种姿态。没有纷纷扰扰，因为明白要什么，做什么；没有迷迷糊糊，因为清楚我是谁，谁是我；没有冷冷清清，因为懂得阳光的温暖，心灵的彼岸。活着很难，却是一种期盼；活着很苦，却是一种幸福；活着很累，却是一种无怨无悔。活着，是一首无言的歌。最美的，其实就在身边。总去寻求，可真正得到的，往往是最初；总在埋怨，可真正不弃的，往往在身后；总想穿越，可真正牵绊的，往往是自己。有些风景，只是风景，只能静静欣赏；有些情怀，只是情怀，只能黯然一笑；有些过往，也只是过往，只能让它随风远去。</summary></entry><entry><title type="html">Hello Rust</title><link href="/2022/06/29/hello-rust/" rel="alternate" type="text/html" title="Hello Rust" /><published>2022-06-29T00:01:41+08:00</published><updated>2022-06-29T00:01:41+08:00</updated><id>/2022/06/29/hello-rust</id><content type="html" xml:base="/2022/06/29/hello-rust/">&lt;h1 id=&quot;hello-rust&quot;&gt;Hello Rust&lt;/h1&gt;

&lt;div class=&quot;language-rust highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cs&quot;&gt;# hello_rust.rs&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;println!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello Rust!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Sundar Zhou</name></author><category term="Rust" /><summary type="html">Hello Rust</summary></entry><entry><title type="html">即使你无能为力，你是否还愿意看到这个世界真实的黑暗</title><link href="/2022/06/18/dark-night/" rel="alternate" type="text/html" title="即使你无能为力，你是否还愿意看到这个世界真实的黑暗" /><published>2022-06-18T00:44:05+08:00</published><updated>2022-06-18T00:44:05+08:00</updated><id>/2022/06/18/dark-night</id><content type="html" xml:base="/2022/06/18/dark-night/">&lt;p&gt;诚然，敏感的你确实认知到了世界的部分真相，我们的社会其实和动物世界本质上差别不大，虽然这让人难于接受，弱肉强食，丛林法则。但是人更善于伪装或者说是自我包装，也可以说是更狡猾或者更聪明，而且懂得运用制定各种规则来驾驭或抵抗人性。如果缺乏独立思考，脑袋会被别人洗的一塌糊涂，还充满道德优越感。&lt;/p&gt;

&lt;p&gt;所以就这一点来讲，你的经历及你对社会的观察甚至说你的敏感和抑郁，让你超出了很多已经麻木和浑然不知的人，这也导致了你比其他人更多的痛苦。&lt;/p&gt;

&lt;p&gt;更可贵的是，你并没对自己的这些看法太固执，太自以为是，而是来寻找解脱的方案，要知道，有不少人看到这部分真相时 要么变得愤世嫉俗，怼天怼地怼空气，要么沆瀣一气，去努力成为食物链顶端。&lt;/p&gt;

&lt;p&gt;我能部分体会到你的感受，也希望你可以从中走出来。首先，世界并不是非黑即白的，缤纷世界闪出的美丽，是因为她没有分开每种色彩。而你的头脑作为一个选择器，只看到这个世界（人性）的灰暗面，而且你越是去看负面的东西，你看到的负面信息就越多，这就像有洁癖的人，眼中只能看到各种垃圾灰尘一样。人性不仅有黑暗，也有光辉，否则我们的世界早就成为地狱了，但现在的情况是 你自己的世界已经成为地狱了，因为你像个雷达装置一样，只搜寻那些黑暗面来填充自己的内心，就像四处搜集各种垃圾来塞进自己的心灵空间，同时又埋怨自己周围的世界为什么这么臭不可闻。你现在可以有意识的去搜索人性的光辉事件，就能发现这些事情也不少见。我们一定要警惕自己的想法，尤其现在各种网络app的算法已经变成了不断推送我们感兴趣的内容给我们，那么就会导致一些无意识的人看到的只会是他认同的、想看到的内容，会导致意识越来越固执、自以为是。让他坚信“看吧，我就知道，世界就是这样XX的。”世界上，好人坏人，美好丑陋，什么都有，你的注意力决定了你的世界，你的世界来自于你的视界。&lt;/p&gt;

&lt;p&gt;你的抑郁与你的个人经历可以说有很大的关系，未经他人苦，莫劝他人善，但是，当你的见解只能给你带来痛苦和烦恼时，那错误的肯定是你自己，哪怕是整个世界都错了，但这是不可能的，可能只会是要么自己错了，要么只是自己周围错了。世界广阔的狠，你在乌云下面，只要挪一挪可能就是万里晴空。越是底层，人性阴暗面暴露的就越多，因为资源有限，能力有限。而越是上层就越彬彬有礼，你好我好大家好，因为面子地位本身就可以带来资源，这就是马太效应。往上看都是屁股，往下看都是笑脸，世界就是这样，甚至连对错都不存在，所谓的对错可能只是某些人希望你认为的对错，因为你一旦认同了那些对错，你就更好被他掌控了，甚至他都不需要管理你，因为你已经被那些深以为然的是非观自我管理了，而且看到不合这些是非观的人，你就会去主动唾弃。所谓的对错，只是我们看待事件的位置和角度不同罢了。&lt;/p&gt;

&lt;h3 id=&quot;所以你要摆脱这些二元认知对一件事要从多个角度代入不同的角色去思考这样可以让你豁然开朗不再自以为是自我埋没网上很多杠精最喜欢的就是先入为主把自以为或者已经被别人洗脑洗傻了的观念当成是自己然后一看到不合乎这些观念的就去猛怼这些人就只能当炮灰具有天生的韭菜属性&quot;&gt;所以你要摆脱这些二元认知，对一件事要从多个角度，代入不同的角色去思考，这样可以让你豁然开朗，不再自以为是，自我埋没。网上很多杠精最喜欢的就是先入为主，把自以为或者已经被别人洗脑洗傻了的观念当成是自己，然后一看到不合乎这些观念的就去猛怼，这些人就只能当炮灰，具有天生的韭菜属性。&lt;/h3&gt;

&lt;p&gt;推荐你多听听许巍的歌曲，还有一首 张三的歌，世界很大，很丰富多彩，你戴上了墨镜，看到的只会是灰暗，充满压抑。把墨镜摘了，你会轻松很多的。我们看错了世界，却说世界欺骗了我们。弱肉强食是种选择，利他思维也是一种策略，虽然目的一样，但对自己和他人乃至对世界带来的改变就截然不同了，“无私成其私”不是一句空话、假话，而是深谙规律后的最高智慧的选择。&lt;/p&gt;

&lt;p&gt;作者：清宁
链接：https://www.zhihu.com/question/439884390/answer/1715913386
来源：知乎
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。&lt;/p&gt;</content><author><name>Sundar Zhou</name></author><category term="Confusion" /><summary type="html">诚然，敏感的你确实认知到了世界的部分真相，我们的社会其实和动物世界本质上差别不大，虽然这让人难于接受，弱肉强食，丛林法则。但是人更善于伪装或者说是自我包装，也可以说是更狡猾或者更聪明，而且懂得运用制定各种规则来驾驭或抵抗人性。如果缺乏独立思考，脑袋会被别人洗的一塌糊涂，还充满道德优越感。</summary></entry><entry><title type="html">为什么互联网大厂一边大规模裁员，又一边招聘？</title><link href="/2022/06/02/internet-mode/" rel="alternate" type="text/html" title="为什么互联网大厂一边大规模裁员，又一边招聘？" /><published>2022-06-02T10:38:29+08:00</published><updated>2022-06-02T10:38:29+08:00</updated><id>/2022/06/02/internet-mode</id><content type="html" xml:base="/2022/06/02/internet-mode/">&lt;p&gt;真实在大厂工作过，十几年的互联网老兵告诉你事实，&lt;/p&gt;

&lt;p&gt;大厂里面有很多的业务线，也有很多的部门，每个部门负责的都不一样，一个大厂有数百条业务线，有的赚钱，有的赔钱。但是通常赔钱的最多。&lt;/p&gt;

&lt;p&gt;通常大厂是这样玩的:&lt;/p&gt;

&lt;p&gt;上层领导看中了一个方向，比如说游戏是赚钱的，于是就大量开始招聘游戏岗位。公司往这方面投钱，比如说一年投入 1000 万，然后制定一个目标，实现三年盈利。通过招聘，你顺利进入了他们的游戏业务线，成为大厂员工。光环加顶，有些刚进入大厂的员工觉以为祖坟冒青烟了，但也可能冒黑烟。&lt;/p&gt;

&lt;p&gt;因为公司业务线刚开辟，所以就大量招人，高层来赌这个业务三年后一定盈利。把人力，金钱，物力投入进去。至于高层哪来的那么大自信赌成功，说真的，他们也都是懵逼状态。高层之间也内卷，总裁副总裁一大批，负责的业务都不同。&lt;/p&gt;

&lt;p&gt;我在某厂做总监时，经常跟一些总裁开会讨论方案，他们真的啥也不懂。因为这群人年龄太大了，很多都是投资人，根本不懂互联网，都是瞎指挥。懂互联网的也是极个别人，总裁眼里只有钱。其他都没有。各种不着调的想法每次和他们开完会恨不能摔门而去。但你还得执行他们不靠谱的想法，谁让咱们是打工人。就算方案是屎也得给老板做出臭豆腐的口感。实现不了怎么办，假装很努力的加班啊，得让老板看到咱很努力的干啊。高层画大饼不要紧，咱也得吃饭啊。&lt;/p&gt;

&lt;p&gt;高层天天开会，传达给中层的就一句话，今年我们要实现十个亿的目标！&lt;/p&gt;

&lt;p&gt;卧槽，毛线都没有呢，那怎么办？上有政策下有对策，中层也有办法，你们知道中层每天都在干什么吗？天天写PPT！天天给高层做实现十个亿目标的汇报，一次一次被打回重改，直到改到高层认为 PPT 可以真的能实现十个亿目标位置。&lt;/p&gt;

&lt;p&gt;PPT 是个好东西，不仅能造车，还能造梦!&lt;/p&gt;

&lt;p&gt;很遗憾的是，高层和中层一本正经的搞了 PPT 很长时间，大家一致认为从 PPT 上面已经证明能够实现十个亿的目标但多数业务实际根本不可能像预想的那样盈利，PPT 终究是 PPT，当不能盈利时，这条业务线就会被砍掉，你经常发现大厂裁员是整条业务线从上到下全部被裁掉就是这个问题。&lt;/p&gt;

&lt;p&gt;老板层总是有各种想法，每年都要想我要做什么，总之都是为了赚钱。有的老板都是拍脑门，反正人家有钱，玩得起。瞎折腾怕什么，万一折腾成功了呢。就像有个人说的那样，梦想总是有的，万一实现了呢。&lt;/p&gt;

&lt;p&gt;把钱往里面一投资，找一堆写手，做几篇新闻，搞几个概念，开始忽悠了。全都给我上，产品，技术，运营，招起来!上层要干什么事情呢，上层要拿着 PPT 去资本市场忽悠钱。&lt;/p&gt;

&lt;p&gt;有一次和某个总裁喝酒，无意之间他说了一句话，我们不这样的话，股票就会跌的，我们只有这样做股票才能涨。&lt;/p&gt;

&lt;p&gt;我忽然恍然大悟，其实他们根本不是做互联网的，他们就是一群在股市圈钱的人。是的，只要折腾起来，股民才会不断的被割韭菜。原来赔掉的钱可以通过股市赚回来!资本市场才是真正赚钱的地方。&lt;/p&gt;

&lt;p&gt;互联网从诞生开始，就是靠资本一轮一轮融资的吹起来的，高层就是投资人，靠着一个一个的故事融钱，用钱赚钱，而至于这个业务，他们并不关心能不能做成。他们只关心手里的股票能不能升值。&lt;/p&gt;

&lt;p&gt;但是问题是，你不可能所有开辟的业务线都赔钱吧，股东也不是傻子啊，靠股市画大饼早晚会被做空。所以他们总得有点赚钱的业务啊。&lt;/p&gt;

&lt;p&gt;十条业务线九条可能都赔钱，但有一条业务线赚钱就成功。公司高层都是赌徒心理，因为他们也没办法判断哪个业务能成功。多生几个孩子，总有一个孩子能成器吧。&lt;/p&gt;

&lt;p&gt;不成器的孩子怎么办，放弃吧。然后继续生孩子，继续招人。大厂靠着自己的招牌不用担心招不到人，反正人人都想进大厂。就算全都裁掉，照样能够招到。就算赔掉一个亿对大厂来说只不过是交学费而已。毕竟人家赚一个亿也就是小目标。&lt;/p&gt;

&lt;p&gt;那问题在于，为什么他们不用原有的团队做呢，因为原有团队在高层看来就是败军之将，给你三年时间都没搞成你在高层眼里已经没有价值，不裁你才怪呢。老板看你不顺眼，他们眼中只有一个单词：loser！&lt;/p&gt;

&lt;p&gt;大部分的公司都是公司业务正常调整，简单来说就是，这孩子不成器，赶出家门。&lt;/p&gt;

&lt;p&gt;那你说，我这条业务线搞成了，那总不会被裁吧。&lt;/p&gt;

&lt;p&gt;呵呵，你想的天真了，一条业务线搞成了照样裁掉一半，这叫组织人员优化，本身做这条业务线就需要大量人参与进来，就像你建一座桥，建设时候需要几千人，建完了只需要几十人维护就可以了。&lt;/p&gt;

&lt;p&gt;那你说，我只要努力就不会被裁吧，呵呵，裁掉你和你努力不努力无关系，什么末尾淘汰制只不过是裁你的理由，制定一个规则，让员工内卷，因为员工内卷对企业最有好处。只有裁员，才能让员工感到危机。&lt;/p&gt;

&lt;p&gt;你虽然花费了大量时间精力，什么 996 啊，公司是不会看在眼里的，公司只看你成本太高了。三十五岁为什么会被裁，你知道，你在一家公司干十年你的薪资得有多高，不给你加薪资你不满意，给你加薪资老板不满意，反正有的是人干活，这么高薪资不需要你了，就裁掉了。与你能力无关系。只和你成本有关系。&lt;/p&gt;

&lt;p&gt;在大厂的业务线，中层压力最大，因为裁员先把中层干掉。中层在公司的定位就是背锅的，中层一般都是总监或者级别副总裁级，负责承上启下，只要业务快玩完了，为了给公司交代，稳定军心，高层首先要把中层拿来祭旗了。&lt;/p&gt;

&lt;p&gt;中层天天要逼着底层加班，也并不是真的很忙，因为他要做给高层看，让高层觉得他很努力，一定能成功。但是中层消息也很灵敏，见势不妙，没等裁员就脚底抹油提前跑路了。&lt;/p&gt;

&lt;p&gt;跑之前中层这群老油条们还得给底层没有经验的职场小白 PUA，兄弟们，挺住，困难只是暂时的。只要团结一心，一定可以的！&lt;/p&gt;

&lt;p&gt;你会说中层难道不想要补偿吗？呵呵，你太小看中层了，在业务没有倒闭前另谋其主，还TM能吹牛皮一把说这业务做的很成功。你看，离开我就倒闭了吧。真要耗到业务干倒闭了拿那个裁员补偿，对他们来说找工作都不好找。中层早就提前谋划好了出路，重要的人该走的都走光了。&lt;/p&gt;

&lt;p&gt;多说句中层的话题，中层之间也经常在一起喝酒，不同的业务线之间也会互相交流经验，我参加过很多聚餐，喝酒前大家牛皮吹一波，我们做的是十个亿的大项目，这算什么，我们做的是一百亿的大项目。你们说的都不是什么，我们定下目标一千亿。酒过三巡，真情流露，大家互相安慰，兄弟，早撤吧，我看透了，这活没希望。&lt;/p&gt;

&lt;p&gt;等你有一天做了中层，就知道中层才是互联网公司最苦逼的，上面领导骂你，底下员工骂你，回家老婆骂你，辞职不敢，没有一边讨好，每件事处理起来都是贼烫手。做中层久了就知道，有些事不能硬撑，关键时候跑路才是上上策，孙子兵法得作为案头书天天阅读，不然你怎么在这么复杂的环境中生存下去。&lt;/p&gt;

&lt;p&gt;这就是你看到的类似新闻:&lt;/p&gt;

&lt;p&gt;某某大厂某事业部负责人离职，加入某某公司。&lt;/p&gt;

&lt;p&gt;但你看到这种消息后一般还不到裁员时候，因为裁员需要一个过程。&lt;/p&gt;

&lt;p&gt;三个月后，轮到 HR 上场了，HR 会在一夜之间发个通告，因某某原因，公司无法经营，宣布裁员，底层员工被打的措手不及！前一天还在加班到凌晨十二点，今天一上班就被告知裁员。没等你反应过来，整个部门都没有了。昨天，还许诺你加薪，今天你一脸懵逼的发呆，看着同事一个一个打包离开。HR 就告诉你一句话，今天必须走。按劳动合同，给你 n+1 补偿。其实发布裁员公告之前，所有准备都已经提前三个月准备好了。连给你 n+1 的钱都准备好了。好温暖，只有底层还蒙在鼓里。&lt;/p&gt;

&lt;p&gt;有的大厂裁员也很有情怀，临走还发给职场小白一个毕业证，同学！恭喜你在某厂顺利毕业了！呵呵，有的应届生刚入职第一天就毕业了，这速度真 TM 的快啊!给我的 50 万年薪呢？这么快就没了？咱好歹号称是大厂啊，别这样糊弄人行不？&lt;/p&gt;

&lt;p&gt;这时候你看到的新闻就是:&lt;/p&gt;

&lt;p&gt;某厂内部员工在某 APP 传闻裁员，整个事业部都被裁撤，未经官方证实。&lt;/p&gt;

&lt;p&gt;于是一轮从招聘到裁员的过程就结束了，宣布一条不靠谱的业务线彻底消失，老板的大饼没有画成。&lt;/p&gt;

&lt;p&gt;从项目立项，到招人，到投资扩建，到疯狂炒概念，再到负责人离职，内部传出裁员，公司证实属实。众位朋友，等你经历互联网十年你就知道这种招聘裁员戏天天上演。只是大部分都没有爆出来而已。因为很多业务线都不起眼，还没有人知道就已经消亡了。&lt;/p&gt;

&lt;p&gt;然后公司继续开辟新业务线，继续靠着大厂这个招牌白嫖打工者的青春，反正你不来是有别人来，我反正是给钱的，你不做还有别人做。真招不到人就开始画大饼，给应届生开高薪。一毕业就来个年薪五十万，卧槽，我这工作十几年的都没一个应届生薪资高，你招他来做什么？后来我明白，很多人都是凑数的。裁员的时候容易点。要招我这种老油条，连签合同我都得看三遍，敢裁我，分分钟给你讲劳动法。别 TM 忽悠我，罗翔的刑法讲义我天天看。应届生就容易多了，签合同都不看一眼，裁你时候给你一个绩效不合格，他们还觉得自己没有尽全力，对不起公司。也不用 n+1 补偿，因为连 n 都没有。看起来薪资那么高，其实用工成本真的很廉价。很多都是做给外界看的。&lt;/p&gt;

&lt;p&gt;其实很多人，不过是陪着高层赌未来，高层赌不对没关系，可以继续赌，毕竟人家不会担心自己被裁掉。本身高层眼里也没有员工，只有利益，员工自己堵不对，只能被裁了。老板赌上的是钱，员工陪赌的是未来。老板赌输了钱，大不了再赌一把，员工赌没了未来，就真的啥也没有了。有的员工连命都赔赌进去了。&lt;/p&gt;

&lt;p&gt;所谓某些互联网大厂，也不过是披着一层炫酷的外衣，进去也是 996 的工作。因为你得陪着老板赌这种不靠谱的未来。&lt;/p&gt;

&lt;p&gt;只是，你人生需要做的是淡定！看庭前花开花落，云卷云舒，莫纠结！很多事情，对打工人来说都很无奈，最后苦的还是打工人。&lt;/p&gt;

&lt;p&gt;你方唱罢我登场，今天他被裁，明天你被裁，也只是打工人的命运。与你能力高低真没关系。如果有关系，那你不过是个背锅侠而已。裁你，也只是杀鸡给猴看。&lt;/p&gt;

&lt;p&gt;领导说，我们给社会每年输送一千人才。呵呵，确实是这样，陪你玩几年，你赚的盆满钵满，我们成了人才。两全其美，何乐不为呢。我TM混了互联网十五年不是做人才就是走在做人才的路上！&lt;/p&gt;

&lt;p&gt;青春就那么几年，你从小到大都是很优秀，拿着 985 的学历拼进大厂，恋爱都不敢谈，每天 996 的为公司奋斗，养着房东，养着这个城市，养着身体几十万亿的细胞，不到三十岁的小伙子头发秃顶，肾虚无力，腰间盘突出，赌上了自己一切，用自己拼搏卷走了无数人，梦想有一天出人头地，你做好了最优秀的自己，无一刻休息，只为了明天更好，最后结局被裁了。最后如梦初醒，才知道自己是小丑。&lt;/p&gt;

&lt;p&gt;真实，上面的话都不敢说，我敢说只因为我不在大厂干了，也不想再进去。就算封杀我也无所谓。我坚决反对拿员工前途做赌注的公司!&lt;/p&gt;

&lt;p&gt;我要说这些话，也希望企业裁员慎重考虑!同时也希望企业不要盲目的招聘，因为真的很多同学因为你们的招聘赌上了未来。我不怕得罪那么多的大厂，我只希望彼此都真诚些，大家都是为了更好的未来。&lt;/p&gt;

&lt;p&gt;我没有针对任何大厂，我只说一种现象，希望我写这些不会被封掉。&lt;/p&gt;

&lt;p&gt;人生苦短，善待自己！&lt;/p&gt;

&lt;p&gt;原文链接：https://www.zhihu.com/question/517051862/answer/2353062328&lt;/p&gt;</content><author><name>Sundar Zhou</name></author><category term="Confusion" /><summary type="html">真实在大厂工作过，十几年的互联网老兵告诉你事实，</summary></entry><entry><title type="html">我的第一个 JAVA 程序</title><link href="/2022/05/24/hello-java/" rel="alternate" type="text/html" title="我的第一个 JAVA 程序" /><published>2022-05-24T00:03:31+08:00</published><updated>2022-05-24T00:03:31+08:00</updated><id>/2022/05/24/hello-java</id><content type="html" xml:base="/2022/05/24/hello-java/">&lt;h2 id=&quot;我的第一个-java-程序&quot;&gt;我的第一个 JAVA 程序&lt;/h2&gt;
&lt;p&gt;创建文件 HelloWorld.java(文件名需与类名一致), 代码如下：&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HelloWorld&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;命令行执行：&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;javac HelloWorld.java
java HelloWorld # output: Hello World
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Sundar Zhou</name></author><category term="Java" /><category term="HelloWorld" /><summary type="html">我的第一个 JAVA 程序 创建文件 HelloWorld.java(文件名需与类名一致), 代码如下：</summary></entry><entry><title type="html">SHELL脚本递归访问目录，文件汇总，最简单的处理空格方式</title><link href="/2022/05/21/shell-script/" rel="alternate" type="text/html" title="SHELL脚本递归访问目录，文件汇总，最简单的处理空格方式" /><published>2022-05-21T18:07:27+08:00</published><updated>2022-05-21T18:07:27+08:00</updated><id>/2022/05/21/shell-script</id><content type="html" xml:base="/2022/05/21/shell-script/">&lt;h3 id=&quot;空格处理&quot;&gt;空格处理&lt;/h3&gt;
&lt;p&gt;搜索了很多方法处理文件名带空格的处理方式，都感觉太复杂，而且比较笨试不出有用的效果，最后还是直接使用符号替换最有用,改完需要记得改回来&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;SAVEIFS=$IFS
IFS=$(echo -en &quot;\n\b&quot;)
IFS=$SAVEIFS
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;shell遍历脚本如下&quot;&gt;shell遍历脚本如下&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#!/bin/bash

function recursive_copy_file()
{
    # 判断dest_dir是否存在，不存在就新建
    # if [ ! -d $2 ]; then
    #     mkdir -p $2
    # fi
    dirlist=$(ls $1)
    for name in ${dirlist[*]}
    do
        # echo $2
        if [ -f $1/$name ]; then
            file_name=$1/$name
            # 使用目录做为文件名
            new_name=${file_name//\//-}
            echo $new_name
            # 如果是文件，并且$2不存在该文件，则直接copy
            if [ ! -f $2/$new_name ]; then
                cp $1/$name $2/$new_name
            fi
        elif [ -d $1/$name ]; then
            # 如果是目录，并且$2不存在该目录，则先创建目录,将文件按原结构拷贝
            # if [ ! -d $2/$name ]; then
            #     mkdir -p $2/$name
            # fi
            # recursive_copy_file $1/$name $2/$name

            # 递归拷贝，文件汇总到同一文件夹
            recursive_copy_file $1/$name $2
        fi
    done
}

source_dir=/Users/xxx/MY\ Files
dest_dir=/Users/xxx/Files\ Collections

SAVEIFS=$IFS
IFS=$(echo -en &quot;\n\b&quot;)
recursive_copy_file $source_dir $dest_dir
IFS=$SAVEIFS
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Sundar Zhou</name></author><category term="Shell" /><summary type="html">空格处理 搜索了很多方法处理文件名带空格的处理方式，都感觉太复杂，而且比较笨试不出有用的效果，最后还是直接使用符号替换最有用,改完需要记得改回来 SAVEIFS=$IFS IFS=$(echo -en &quot;\n\b&quot;) IFS=$SAVEIFS shell遍历脚本如下 ``` #!/bin/bash</summary></entry><entry><title type="html">[Rails] with_indifferent_access 使用</title><link href="/2022/05/17/rails-with_indifferent_access/" rel="alternate" type="text/html" title="[Rails] with_indifferent_access 使用" /><published>2022-05-17T21:40:48+08:00</published><updated>2022-05-17T21:40:48+08:00</updated><id>/2022/05/17/rails-with_indifferent_access</id><content type="html" xml:base="/2022/05/17/rails-with_indifferent_access/">&lt;p&gt;今天发现了一个&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ActiveSupport::HashWithIndifferentAccess&lt;/code&gt;类里的一个方法&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;with_indifferent_access&lt;/code&gt;,
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;with_indifferent_access&lt;/code&gt;方法允许将hash同时使用string和symbol的方式操作hash key。&lt;/p&gt;
&lt;h2 id=&quot;使用场景&quot;&gt;使用场景&lt;/h2&gt;
&lt;p&gt;当访问一个 hash 时，如果其中的元素使用了String形式的 key，而我们使用 Symbol 形式的 key进行调用，就会无法取到值&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;hash = { 'type' =&amp;gt; 'mobile' }
hash['type'] =&amp;gt; &quot;mobile&quot;
# 用符号key会返回 nil
hash[:type] =&amp;gt; nil

# hash 调用 with_indifferent_access 时就可以同时使用两种类型的key了
new_hash = { 'type' =&amp;gt; 'Web', :language =&amp;gt; 'Ruby' }
new_hash[:type] =&amp;gt; &quot;web&quot;
new_hash[&quot;type&quot;] =&amp;gt; &quot;web&quot;
new_hash[:language] =&amp;gt; &quot;web&quot;
new_hash[&quot;language&quot;] =&amp;gt; &quot;web&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Sundar Zhou</name></author><category term="Rails" /><summary type="html">今天发现了一个ActiveSupport::HashWithIndifferentAccess类里的一个方法with_indifferent_access, with_indifferent_access方法允许将hash同时使用string和symbol的方式操作hash key。 使用场景 当访问一个 hash 时，如果其中的元素使用了String形式的 key，而我们使用 Symbol 形式的 key进行调用，就会无法取到值 ``` hash = { ‘type’ =&amp;gt; ‘mobile’ } hash[‘type’] =&amp;gt; “mobile” 用符号key会返回 nil hash[:type] =&amp;gt; nil</summary></entry><entry><title type="html">Github Page自动部署报错</title><link href="/2022/05/14/build-and-deploy-error/" rel="alternate" type="text/html" title="Github Page自动部署报错" /><published>2022-05-14T00:28:18+08:00</published><updated>2022-05-14T00:28:18+08:00</updated><id>/2022/05/14/build-and-deploy-error</id><content type="html" xml:base="/2022/05/14/build-and-deploy-error/">&lt;p&gt;突然发现每次部署的时候都会卡在 build-and-deploy 报错误：
&lt;img src=&quot;/images/blog/build-and-deploy-error.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;各种Google无关，但是看报错信息发现是这个脚本造成的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.github/workflows/ci.yml&lt;/code&gt;
看了下作者的源码发现需要配置github完成 jsDelivr的JSON 资源加速&lt;/p&gt;

&lt;p&gt;步骤如下：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;在 GitHub 新建一个 Personal access Token：&lt;/p&gt;

    &lt;p&gt;Settings –&amp;gt; Developer settings –&amp;gt; Personal access tokens –&amp;gt; Generate new token –&amp;gt; 填写 note，勾选 public_repo，生成之后复制 token 值备用。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在博客源码仓库的 Settings –&amp;gt; Secrets –&amp;gt; Actions –&amp;gt; New repository secret，Name 填 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ACCESS_TOKEN&lt;/code&gt;，Value 填第 1 步里复制的 token 值；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;.github/workflows/ci.yml 的内容如下，不需要修改：&lt;/p&gt;

    &lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Build and Deploy&lt;/span&gt;

 &lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
   &lt;span class=&quot;na&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
     &lt;span class=&quot;na&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;master&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;

 &lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
   &lt;span class=&quot;na&quot;&gt;build-and-deploy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
     &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt;
     &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
       &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Checkout&lt;/span&gt;
         &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/checkout@v2.3.1&lt;/span&gt;
         &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
           &lt;span class=&quot;na&quot;&gt;persist-credentials&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;

       &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Set Ruby &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2.7&lt;/span&gt;
         &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/setup-ruby@v1&lt;/span&gt;
         &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
           &lt;span class=&quot;na&quot;&gt;ruby-version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2.7&lt;/span&gt;

       &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Install and Build&lt;/span&gt;
         &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
           &lt;span class=&quot;s&quot;&gt;gem install bundler&lt;/span&gt;
           &lt;span class=&quot;s&quot;&gt;bundle install&lt;/span&gt;
           &lt;span class=&quot;s&quot;&gt;bundle exec jekyll build&lt;/span&gt;

       &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Deploy&lt;/span&gt;
         &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;JamesIves/github-pages-deploy-action@3.6.2&lt;/span&gt;
         &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
           &lt;span class=&quot;na&quot;&gt;ACCESS_TOKEN&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt;
           &lt;span class=&quot;na&quot;&gt;BRANCH&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;built&lt;/span&gt;
           &lt;span class=&quot;na&quot;&gt;FOLDER&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;_site&lt;/span&gt;
           &lt;span class=&quot;na&quot;&gt;CLEAN&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;大意就是在向 master 分支 push 代码时，自动执行 checkout、初始化 ruby 环境、安装 Jekyll 并编译博客源码的工作，最后将编译生成的 _site 目录里的内容推送到 built 分支。对 GitHub Actions 感兴趣的同学可以自行参考官方说明学习。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;参考文章：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://mazhuang.org/2020/05/01/cdn-for-github-pages/&quot;&gt;使用 jsDelivr 免费加速 GitHub Pages 博客的静态资源&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Sundar Zhou</name></author><category term="jsDelivr" /><category term="GithubPages" /><summary type="html">突然发现每次部署的时候都会卡在 build-and-deploy 报错误：</summary></entry><entry><title type="html">jsdelivr 缓存刷新方法</title><link href="/2022/05/13/jsdelivr-cache/" rel="alternate" type="text/html" title="jsdelivr 缓存刷新方法" /><published>2022-05-13T18:06:57+08:00</published><updated>2022-05-13T18:06:57+08:00</updated><id>/2022/05/13/jsdelivr-cache</id><content type="html" xml:base="/2022/05/13/jsdelivr-cache/">&lt;p&gt;简介：jsDelivr 是一个免费、开源的加速CDN公共服务。&lt;/p&gt;

&lt;h2 id=&quot;jsdelivr-缓存刷新方法&quot;&gt;jsdelivr 缓存刷新方法&lt;/h2&gt;
&lt;p&gt;只需要将链接中的cdn 更改为 purge，访问一下，后面就会刷新，如果没有更新就多刷新几次&lt;/p&gt;

&lt;p&gt;https://cdn.jsdelivr.net/xxxx&lt;/p&gt;

&lt;p&gt;切换为&lt;/p&gt;

&lt;p&gt;https://purge.jsdelivr.net/xxx&lt;/p&gt;

&lt;p&gt;然后再访问原来的链接就好了
https://cdn.jsdelivr.net/xxx&lt;/p&gt;</content><author><name>Sundar Zhou</name></author><category term="jsDelivr" /><category term="CDN" /><summary type="html">简介：jsDelivr 是一个免费、开源的加速CDN公共服务。</summary></entry><entry><title type="html">傻瓜式-配置阿里云服务器（centos7.7 64位）部署Rails项目</title><link href="/2022/05/12/my-first-post/" rel="alternate" type="text/html" title="傻瓜式-配置阿里云服务器（centos7.7 64位）部署Rails项目" /><published>2022-05-12T20:16:54+08:00</published><updated>2022-05-12T20:16:54+08:00</updated><id>/2022/05/12/my-first-post</id><content type="html" xml:base="/2022/05/12/my-first-post/">&lt;h2 id=&quot;ssh免密登录设置&quot;&gt;SSH免密登录设置&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;进入服务器
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  ssh root@xx.xx.xx.xx -p 22
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;增加用户
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  adduser deploy  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;为新增的deploy 设置密码
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  passwd deploy 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;命令输入 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;visudo&lt;/code&gt;, 在root ALL=(ALL) ALL 添加
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  second ALL=(ALL)    ALL
  ALL=(ALL) NOPASSWD: ALL  # sudo不用输入密码
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;编辑文件 /etc/ssh/sshd_config，禁用root登录修改 PermitRootLogin 为 no
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  PermitRootLogin no
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;重新加配置文件吧，使上面的命令生效
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  service sshd restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;在本机增加&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;alias&lt;/code&gt;(这里用的是zsh), 然后重新加载配置文件 source ~/.zshrc
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  deploy=&quot;ssh deploy@xx.xx.xx.xx -p 22&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;8. 本机生成秘钥，放入服务器，然后本地直接输入 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;deploy&lt;/code&gt; 就可以登录上服务器 &lt;/p&gt;
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  ssh-keygen -t rsa #直接一路回车，按默认设置就行
  cat .ssh/id_rsa.pub
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;deploy&lt;/code&gt; 登录服务器,还没有将密钥放入服务器，需要输入密码&lt;/li&gt;
  &lt;li&gt;创建放置密钥目录
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  mkdir ~/.ssh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;创建放置密钥文件
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  touch ~/.ssh/authorized_keys
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;调整权限
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  chmod 700 ~/.ssh
  chmod 600 ~/.ssh/authorized_keys
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;在本地复制密钥并写入服务器的文件中
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; cat ~/.ssh/id_rsa.pub | deploy &quot;cat &amp;gt;&amp;gt; ~/.ssh/authorized_keys&quot;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;安装zsh和oh-my-zsh&quot;&gt;安装zsh和oh-my-zsh&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;zsh安装
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  sudo yum install -y zsh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt; &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;zsh安装
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  chsh -s /bin/zsh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;手动安装oh-my-zsh, 如果连接不上可以试下重启服务&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd ~
git clone git://github.com/robbyrussell/oh-my-zsh.git  # 从github上把oh-my-zsh clone下来到根目录下
~/.oh-my-zsh # 再在根目录下copy一份.zshrc配置
cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;更新系统应用及安装必须的应用&quot;&gt;更新系统应用及安装必须的应用&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo yum -y update 
sudo yum groupinstall -y development # 安装必要的开发工具
sudo su -c 'rpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm';
sudo yum -y update # 再次更新
sudo yum -y install git-core openssl openssl-devel subversion curl curl-devel gcc-c++ patch readline readline-devel zlib zlib-devel libyaml-devel libffi-devel make bzip2 autoconf automake libtool bison sqlite-devel libxml2 libxml2-devel libxslt libxslt-devel libtool # 安装一堆依赖
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;使用rvm安装ruby&quot;&gt;使用rvm安装ruby&lt;/h2&gt;
&lt;h3 id=&quot;安装-gpg-keys&quot;&gt;安装 GPG keys:&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gpg2 --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;如果你遇到问题或想了解更多，请查看安全问题&lt;/p&gt;

&lt;h3 id=&quot;安装-rvm&quot;&gt;安装 RVM:&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -sSL https://get.rvm.io | bash -s stable
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;同时安装ruby-和-rails&quot;&gt;同时安装ruby 和 rails&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -sSL https://get.rvm.io | bash -s stable --rails
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;也可以使rbenv安装Ruby 和 Rails，可以参考 https://ruby-china.org/wiki/rbenv-guide&lt;/p&gt;

&lt;h2 id=&quot;安装nginx&quot;&gt;安装Nginx &lt;/h2&gt;
&lt;pre&gt;&lt;code class=&quot;language-  &quot;&gt;cd /usr/local/src/
sudo wget http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz
sudo tar -zxvf pcre-8.35.tar.gz
cd pcre-8.35
sudo ./configure
sudo make
sudo make install
cd /usr/local/src/
sudo wget http://nginx.org/download/nginx-1.10.0.tar.gz
sudo tar -zxvf nginx-1.10.0.tar.gz
cd nginx-1.10.0
sudo ./configure --prefix=/usr/local/nginx
sudo make
sudo make install
sudo ln -s /usr/local/lib/libpcre.so.1 /lib
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;配置nginx&quot;&gt;配置Nginx&lt;/h2&gt;
&lt;h3 id=&quot;配置的nginxconf文件&quot;&gt;配置的nginx.conf文件&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd /usr/local/nginx/conf  #
sudo vim nginx.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nginx.conf&lt;/code&gt; 如下&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;      user  deploy deploy;
worker_processes  auto;
        #error_log  logs/error.log;
        #error_log  logs/error.log  notice;
        #error_log  logs/error.log  info;

        #pid        logs/nginx.pid;

events {
    worker_connections  1024;
    multi_accept on;
    use epoll;
}


http {
    include       mime.types;
    default_type text/html;
    charset UTF-8;

    #log_format  main  '$remote_addr - $remote_user [$time_local] &quot;$request&quot; '
    #                  '$status $body_bytes_sent &quot;$http_referer&quot; '
    #                  '&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;';

    server_names_hash_bucket_size 128;
    client_header_buffer_size 32k;
    large_client_header_buffers 4 32k;
    client_max_body_size 50m;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;

    keepalive_timeout 20;
    client_header_timeout 20;
    client_body_timeout 20;
    reset_timedout_connection on;

    fastcgi_connect_timeout 300;
    fastcgi_send_timeout 300;
    fastcgi_read_timeout 300;
    fastcgi_buffer_size 64k;
    fastcgi_buffers 4 64k;
    fastcgi_busy_buffers_size 128k;
    fastcgi_temp_file_write_size 256k;

    gzip  on;
    gzip_min_length  256;
    gzip_buffers     4 16k;
    gzip_http_version 1.0;
    gzip_comp_level 4;
    gzip_types       text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_vary on;
    gzip_proxied        any;
    gzip_disable        &quot;MSIE [1-6]\.&quot;;

    include vhost/*.conf;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;新建一个文件夹 来存放 server的配置文件 以便 不同server存放到不同文件中，再导入到&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nginx.conf&lt;/code&gt;中，到这里就差不多算是完成了配置 &lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo mkdir vhost  
sudo vim vhost/web.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;web.conf&lt;/code&gt; 如下&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;upstream web {
    server unix:/tmp/unicorn.web.sock fail_timeout=0;
}

server {
    listen       80;
    server_name  sundar.net.cn 45.78.38.241;
    root  /home/sundar/ruby/web/public;

    location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$ {
        expires      30d;
    }

       location ~ .*\.(js|css)?$ {
        expires      30d;
    }

    location ~* ^(/assets|/favicon.ico) {
        access_log        off;
        expires           max;
    }

    location / {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_set_header   X-Forwarded-Host $host;
        proxy_set_header   X-Forwarded-Server $host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_buffering    on;

        if (!-f $request_filename) {
            proxy_pass http://web;
            break;
        }
    }

    error_page   500 502 503 504  /500.html;
    location = /500.html {
        root /home/sundar/ruby/web/public;
    }

    error_log /home/sundar/ruby/web/log/error.log;
    access_log off;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;             &lt;/p&gt;
&lt;h3 id=&quot;配置文件-测试启动关闭重启命令&quot;&gt;配置文件 测试/启动/关闭/重启命令&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo /usr/local/nginx/sbin/nginx -t  #对配置文件进行测试
sudo /usr/local/nginx/sbin/nginx  #启动
sudo /usr/local/nginx/sbin/nginx -s stop #关闭
sudo /usr/local/nginx/sbin/nginx -s reload #重启
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;安装mysql&quot;&gt;安装mysql&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo rpm -ivh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;确认mysql仓库成功添加&quot;&gt;确认Mysql仓库成功添加&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo yum repolist all | grep mysql | grep enabled
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;如果展示像下面,则表示成功添加仓库:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql-connectors-community/x86_64  MySQL Connectors Community    enabled:     51
mysql-tools-community/x86_64       MySQL Tools Community         enabled:     63
mysql57-community/x86_64           MySQL 5.7 Community Server    enabled:    267
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;开始安装mysql57&quot;&gt;开始安装Mysql5.7&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo yum -y install mysql-community-server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;启动mysql&quot;&gt;启动Mysql&lt;/h3&gt;
&lt;h4 id=&quot;启动&quot;&gt;启动&lt;/h4&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo systemctl start mysqld
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;设置系统启动时自动启动&quot;&gt;设置系统启动时自动启动&lt;/h4&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo systemctl enable mysqld
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;查看启动状态&quot;&gt;查看启动状态&lt;/h4&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo systemctl status mysqld
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;mysql的安全设置&quot;&gt;Mysql的安全设置&lt;/h4&gt;

&lt;p&gt;CentOS上的root默认密码可以在文件/var/log/mysqld.log找到，通过下面命令可以打印出来&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat /var/log/mysqld.log | grep -i 'temporary password'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;执行下面命令进行安全设置，这个命令会进行设置root密码设置，移除匿名用户，禁止root用户远程连接等&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql_secure_installation
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;设置数据库编码为utf8&quot;&gt;设置数据库编码为utf8&lt;/h3&gt;

&lt;p&gt;打开配置文件&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo vim /etc/my.cnf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;在[mysqld]，[client]，[mysql]节点下添加编码设置&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[client]
default-character-set=utf8

[mysql]
default-character-set=utf8

[mysqld]
collation-server = utf8_unicode_ci
init-connect='SET NAMES utf8'
character-set-server = utf8
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;重启mysql即可&quot;&gt;重启Mysql即可&lt;/h4&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo systemctl restart mysqld
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;上传布署项目&quot;&gt;上传布署项目&lt;/h2&gt;
&lt;h3 id=&quot;创建文件夹来存放项目&quot;&gt;创建文件夹来存放项目,&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd ~
mkdir ruby
cd ruby     
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;克隆项目并命名为对应的名字，看你配置文件(/usr/local/nginx/conf/vhost/web.conf)，其实应该先执行这部分再去创建配置文件&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone XXXXXXXX web  
cd /usr/local/nginx/conf/vhost
touch web.conf # 对应你的项目名起的配置文件名,上面配置nginx时已经写好了
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;安装yarn&quot;&gt;安装yarn&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl --silent --location https://dl.yarnpkg.com/rpm/yarn.repo | sudo tee /etc/yum.repos.d/yarn.repo
sudo yum install yarn
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;执行rails的项目&quot;&gt;执行rails的项目&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd web  # 进入项目目录
bundle install --without development test
cp config/database.yml.sample config/database.yml
bundle exec rails db:create RAILS_ENV=production
bundle exec rails db:migrate RAILS_ENV=production
bundle exec rails default:system_user RAILS_ENV=production # 一些rake任务
bundle exec rails assets:precompile RAILS_ENV=production
bundle exec rails kindeditor:assets RAILS_ENV=production
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;记得修改configunicornrb&quot;&gt;记得修改config/unicorn.rb&lt;/h2&gt;

&lt;h2 id=&quot;一些方便更新项目时使用的alias&quot;&gt;一些方便更新项目时使用的alias&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;alias rails_start='bundle exec unicorn_rails -E production -c config/unicorn.rb -D'
alias rails_stop='kill $(cat tmp/pids/unicorn.pid)'
alias rails_restart='kill -9 $(cat tmp/pids/unicorn.pid) &amp;amp;&amp;amp; bundle exec unicorn_rails -c config/unicorn.rb -E production -D’
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ps： 80端口可能不是默认打开，需要上服务器安全组打开&lt;/p&gt;</content><author><name>Sundar Zhou</name></author><category term="ROR" /><category term="服务器" /><summary type="html">SSH免密登录设置</summary></entry></feed>